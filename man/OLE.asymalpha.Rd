% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OLE-asymalpha.R
\name{OLE.asymalpha}
\alias{OLE.asymalpha}
\title{calculates the asymmetrical alpha}
\usage{
OLE.asymalpha(data1, data2, datapoints = NULL, Interpolate = TRUE,
  CheckData = TRUE, weightedby = "data1")
}
\arguments{
\item{data1}{list: like returned by either the estdist() and uniform() functions (only if CheckData = TRUE) or by the kernelest() and normalize() function.}

\item{data2}{list: like returned by either the estdist() and uniform() functions (only if CheckData = TRUE) or by the kernelest() and normalize() function.}

\item{datapoints}{numeric (whole numbers); will be passed as funcdatapoints-argument to the EstimatorData() Function and so represents the amount of datapoints which shall be drawn from an possible input function .}

\item{Interpolate}{logical; will be passed to EstimatorData() function.}

\item{CheckData}{logical; If TRUE the EstimatorData() function will be runned in advance.}

\item{weightedby}{string; can either be :'data1' or 'data2'. if it is data1 it will calculate the measure on the basis of data1. Accordingly for 'data2'.}
}
\value{
numeric value representing the asymmetrical alpha.
}
\description{
calculates the asymmetrical alpha from two datasets
}
\details{
calculates the asymmetrical alpha from two datasets, a dataset should be a list which contains either a function (only if CheckData = TRUE) or a data.frame which represents the corresponding probability density function. If CheckData is set False it will go through all the points in the datasets and will not treat it as continous data, meaning, that if the datasets do not share the same points, the result may be calculated wrong. If DataCheck is set TRUE it will run data processing in advance with the EstimatorData() function.
}
\examples{

#Create Datasets
 a     <- c(1:10)
 dates1 <- as.Date(a, origin = '2017-01-01')
 count1 <- c(1,1,3,4,6,9,5,4,2,1)
 dat1   <- data.frame(dates1, count1)
 b     <- c(6:15)
 dates2 <- as.Date(b, origin = '2017-01-01')
 count2 <- c(1,2,4,5,6,9,3,4,1,1)
 dat2   <- data.frame(dates2, count2)
 
 #Calculate corresponding probability densities
 a1 <- estdistr(dat1, returnonlyfunction = FALSE)
 b1 <- kernelest(dat2)
 
 #Calculate the asymmetrical alpha
 OLE.asymalpha(a1,b1, weightedby = 'data2')

}
\seealso{
\code{scale}
}
\author{
Florian Berger <florian_berger@ymail.com>
}
